@model ChangeEmailDTO
@{
	ViewBag.Title = "Change Email";
}

<div class="container mt-4">
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-info alert-dismissible fade-in" role="alert">
            @ViewBag.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div class="alert alert-danger">@error.ErrorMessage</div>
        }
    }

    <div class="border-bottom border-secondary pb-2 mb-4">
        <h1 class="h4 text-light m-0">
            <i class="fa-solid fa-lock"></i> Change Email
        </h1>
    </div>

    <div class="card bg-dark text-light border border-secondary shadow-sm rounded-3">
        <div class="card-body p-4">
            <form asp-action="ChangeEmail" method="post">

                <div class="mb-3">
                    <label asp-for="CurrentEmail" class="form-label">Current Email</label>
                    <input asp-for="CurrentEmail" class="form-control bg-dark text-light border-secondary" type="text" readonly />
                    <span asp-validation-for="CurrentEmail" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="NewEmail" class="form-label">New Email</label>
                    <input asp-for="NewEmail" class="form-control bg-dark text-light border-secondary" type="text" />
                    <span asp-validation-for="NewEmail" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-outline-warning">
                    <i class="fa-solid fa-key"></i> Change Email
                </button>
                <a asp-controller="Account" asp-action="Profile" class="btn btn-outline-secondary">
                    Cancel
                </a>
            </form>
        </div>
    </div>
</div>