@model IEnumerable<TaskResponse>
@{
    ViewBag.Title = "tasks";
}

<div class="container">
    <ul class="task-list">
        @if (Model.Count() == 0)
        {
            <li>There are no tasks</li>
        }
        else
        {
        @foreach (TaskResponse task in Model)
        {
            <li class="task-item">
                <label class="task-label">
                    @if (task.Success)
                    {
                        <input type="checkbox"
                               name="name"
                               value="@task.TaskId"
                               class="task-checkbox"
                               checked
                               onclick="CheckOrUnCheck('@task.TaskId', '@task.GroupId')" />
                    }
                    else
                    {
                        <input type="checkbox"
                               name="name"
                               value="@task.TaskId"
                               class="task-checkbox"
                               onclick="CheckOrUnCheck('@task.TaskId', '@task.GroupId')" />
                    }
                    <div class="task-content">
                        <span class="task-title">@task.Title</span>
                        <span class="task-description">@task.Description</span>
                    </div>
                </label>
                
                    <button class="delete-btn"><a asp-controller="Tasks" asp-action="DeleteTask" 
                    asp-route-groupId="@task.GroupId" asp-route-taskId="@task.TaskId">x</a></button>

                    <button class="edit-btn"><a asp-controller="Tasks" asp-action="EditTask" asp-route-groupId="@task.GroupId" 
                    asp-route-taskId="@task.TaskId"><i class="fas fa-edit fa-2xs"></i></a></button>
            
            </li>
        }
        }
    </ul>
    <button class="create-btn"><a asp-controller="Tasks" asp-action="AddSubTask" asp-route-groupId="@ViewBag.groupId">+</a></button>
</div>
<script>
        function CheckOrUnCheck(taskId, groupId) {
        fetch(`/taskState/${taskId}`, {
            method: 'POST'
        })
        .then(response => {
            if (!response.ok) throw new Error("Failed to update");
            return response.json();
        })
        .then(data => {
            console.log("Updated:", data);
            // Optional: apply styles or reload tasks
        })
        .catch(err => {
            alert("Error: " + err.message);
        });
    }
</script>

